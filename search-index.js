var searchIndex = new Map(JSON.parse('[\
["aob",{"t":"PFFFPFGKGPPFPPPPQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Avx2","DynamicNeedle","Error","Find","InvalidHexdigit","Match","Method","Needle","Reason","Scalar","Sse2","StaticNeedle","Swar32","Swar64","Unclosed","Unexpected","aob","append_to","append_to","append_to","append_to","append_to","append_to","append_to","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","end","eq","eq","equivalent","equivalent","find","find_iter","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_ida","get_iter","get_iter","get_iter","get_iter","get_iter","get_iter","into","into","into","into","into","into","into","into_iter","len","len","len","len","len","len","len","len","len","len","next","range","reason","search_method","span","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"aob"],[144,"alloc::vec"],[145,"aob_common::needle"],[146,"aob_common::error"],[147,"aob_common::pattern"],[148,"core::option"],[149,"core::fmt"],[150,"core::result"],[151,"core::ops::range"],[152,"alloc::string"],[153,"core::any"],[154,"aob_macros"]],"i":[12,0,0,0,8,0,0,0,0,12,12,0,12,12,8,8,0,17,8,9,5,10,11,12,5,17,8,9,5,10,11,12,17,8,9,5,10,11,12,8,9,5,10,11,12,8,9,5,10,11,12,8,9,5,5,10,11,12,12,5,8,12,8,12,15,15,10,11,8,8,9,9,5,10,11,12,17,8,9,5,10,11,12,11,11,8,9,5,10,11,12,17,8,9,5,10,11,12,17,15,17,8,9,5,10,10,11,11,12,17,5,9,17,9,5,8,9,5,10,11,12,8,9,17,8,9,5,10,11,12,17,8,9,5,10,11,12,17,8,9,5,10,11,12],"f":"`````````````````{{c{f{b{d{e}}}}}h{}{}}000000{{{f{j}}}{{f{{n{l}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{bc}}}{{f{be}}}{}{}}000000{{{f{A`}}}A`}{{{f{Ab}}}Ab}{{{f{j}}}j}{{{f{Ad}}}Ad}{{{f{Af}}}Af}{{{f{Ah}}}Ah}{{{f{c}}{f{be}}}h{}{}}00000{{{f{c}}}h{}}0000000{{{f{j}}}Aj}{{{f{A`}}{f{A`}}}Al}{{{f{Ah}}{f{Ah}}}Al}{{{f{c}}{f{e}}}Al{}{}}0{{{f{An}}{f{{n{l}}}}}{{B`{j}}}}{{{f{An}}{f{{n{l}}}}}Bb}{{{f{Ad}}{f{{n{l}}}}}Bb}{{{f{Af}}{f{{n{l}}}}}Bb}{{{f{A`}}{f{bBd}}}{{Bh{hBf}}}}0{{{f{Ab}}{f{bBd}}}{{Bh{hBf}}}}0{{{f{j}}{f{bBd}}}{{Bh{hBf}}}}{{{f{Ad}}{f{bBd}}}{{Bh{hBf}}}}{{{f{Af}}{f{bBd}}}{{Bh{hBf}}}}{{{f{Ah}}{f{bBd}}}{{Bh{hBf}}}}{cc{}}000000{{{f{{n{{B`{l}}}}}}}Af}{{{f{Bj}}}{{Bh{AfAb}}}}{{{f{c}}}{}{}}00000{ce{}{}}0000000{{{f{An}}}Aj}{{{f{c}}}Aj{}}0000{{{f{Ad}}}Aj}1{{{f{Af}}}Aj}2{{{f{bBb}}}B`}{{{f{j}}}{{Bl{Aj}}}}{{{f{Ab}}}{{f{A`}}}}{{{f{Bb}}}Ah}{{{f{Ab}}}{{Bl{Aj}}}}{{{f{j}}}Aj}{{{f{c}}}e{}{}}00000{{{f{c}}}Bn{}}0{c{{Bh{e}}}{}{}}0000000000000{{{f{c}}}C`{}}000000","D":"Eh","p":[[0,"mut"],[5,"Vec",144],[1,"reference"],[1,"unit"],[5,"Match",0,145],[1,"u8"],[1,"slice"],[6,"Reason",0,146],[5,"Error",0,146],[5,"StaticNeedle",0,145],[5,"DynamicNeedle",0,145],[6,"Method",0,147],[1,"usize"],[1,"bool"],[10,"Needle",0,145],[6,"Option",148],[5,"Find",0,145],[5,"Formatter",149],[5,"Error",149],[6,"Result",150],[1,"str"],[5,"Range",151],[5,"String",152],[5,"TypeId",153]],"r":[[1,145],[2,146],[3,145],[5,145],[6,147],[7,145],[8,146],[11,145],[16,154]],"b":[[68,"impl-Debug-for-Reason"],[69,"impl-Display-for-Reason"],[70,"impl-Debug-for-Error%3C\'a%3E"],[71,"impl-Display-for-Error%3C\'_%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGQACAASAAYAGgAhAD0AAwBDAAkAVgAFAGMAAABlAAkAdAAcAA=="}],\
["aob_common",{"t":"PFFFPFGKGPPFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Avx2","DynamicNeedle","Error","Find","InvalidHexdigit","Match","Method","Needle","Reason","Scalar","Sse2","StaticNeedle","Swar32","Swar64","Unclosed","Unexpected","append_to","append_to","append_to","append_to","append_to","append_to","append_to","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","end","eq","eq","equivalent","equivalent","find","find","find_iter","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_ida","get_iter","get_iter","get_iter","get_iter","get_iter","get_iter","into","into","into","into","into","into","into","into_iter","len","len","len","len","len","len","len","len","len","len","next","range","reason","search_method","span","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"aob_common"],[144,"alloc::vec"],[145,"aob_common::needle"],[146,"aob_common::error"],[147,"aob_common::pattern"],[148,"core::option"],[149,"core::fmt"],[150,"core::result"],[151,"core::ops::range"],[152,"alloc::string"],[153,"core::any"]],"i":[12,0,0,0,8,0,0,0,0,12,12,0,12,12,8,8,17,8,9,5,10,11,12,5,17,8,9,5,10,11,12,17,8,9,5,10,11,12,8,9,5,10,11,12,8,9,5,10,11,12,8,9,5,5,10,11,12,12,5,8,12,8,12,15,15,15,10,11,8,8,9,9,5,10,11,12,17,8,9,5,10,11,12,11,11,8,9,5,10,11,12,17,8,9,5,10,11,12,17,15,17,8,9,5,10,10,11,11,12,17,5,9,17,9,5,8,9,5,10,11,12,8,9,17,8,9,5,10,11,12,17,8,9,5,10,11,12,17,8,9,5,10,11,12],"f":"````````````````{{c{f{b{d{e}}}}}h{}{}}000000{{{f{j}}}{{f{{n{l}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{bc}}}{{f{be}}}{}{}}000000{{{f{A`}}}A`}{{{f{Ab}}}Ab}{{{f{j}}}j}{{{f{Ad}}}Ad}{{{f{Af}}}Af}{{{f{Ah}}}Ah}{{{f{c}}{f{be}}}h{}{}}00000{{{f{c}}}h{}}0000000{{{f{j}}}Aj}{{{f{A`}}{f{A`}}}Al}{{{f{Ah}}{f{Ah}}}Al}{{{f{c}}{f{e}}}Al{}{}}0{{{f{An}}{f{{n{l}}}}}{{B`{j}}}}0{{{f{An}}{f{{n{l}}}}}Bb}{{{f{Ad}}{f{{n{l}}}}}Bb}{{{f{Af}}{f{{n{l}}}}}Bb}{{{f{A`}}{f{bBd}}}Bf}0{{{f{Ab}}{f{bBd}}}Bf}0{{{f{j}}{f{bBd}}}Bf}{{{f{Ad}}{f{bBd}}}Bf}{{{f{Af}}{f{bBd}}}Bf}{{{f{Ah}}{f{bBd}}}Bf}{cc{}}000000{{{f{{n{{B`{l}}}}}}}Af}{{{f{Bh}}}{{Bj{AfAb}}}}{{{f{c}}}{}{}}00000{ce{}{}}0000000{{{f{An}}}Aj}{{{f{c}}}Aj{}}000{{{f{Ad}}}Aj}11{{{f{Af}}}Aj}2{{{f{bBb}}}{{B`{c}}}{}}{{{f{j}}}{{Bl{Aj}}}}{{{f{Ab}}}{{f{A`}}}}{{{f{Bb}}}Ah}{{{f{Ab}}}{{Bl{Aj}}}}{{{f{j}}}Aj}{{{f{c}}}e{}{}}00000{{{f{c}}}Bn{}}0{c{{Bj{e}}}{}{}}0000000000000{{{f{c}}}C`{}}000000","D":"Ef","p":[[0,"mut"],[5,"Vec",144],[1,"reference"],[1,"unit"],[5,"Match",0,145],[1,"u8"],[1,"slice"],[6,"Reason",0,146],[5,"Error",0,146],[5,"StaticNeedle",0,145],[5,"DynamicNeedle",0,145],[6,"Method",0,147],[1,"usize"],[1,"bool"],[10,"Needle",0,145],[6,"Option",148],[5,"Find",0,145],[5,"Formatter",149],[8,"Result",149],[1,"str"],[6,"Result",150],[5,"Range",151],[5,"String",152],[5,"TypeId",153]],"r":[[1,145],[2,146],[3,145],[5,145],[6,147],[7,145],[8,146],[11,145]],"b":[[68,"impl-Debug-for-Reason"],[69,"impl-Display-for-Reason"],[70,"impl-Debug-for-Error%3C\'a%3E"],[71,"impl-Display-for-Error%3C\'_%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGUACQAAAAAAEQAGABkAIQA8AAMAQwAJAFYABQBjAAAAZQAJAHQAHAA="}],\
["aob_macros",{"t":"Q","n":["aob"],"q":[[0,"aob_macros"]],"i":[0],"f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
